<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VukosConfigurationManager</name>
    </assembly>
    <members>
        <member name="T:VukosConfigurationManager.ConfigurationWindow">
            <summary>
            Interaction logic for ConfigurationWindow.xaml
            </summary>
            <summary>
            ConfigurationWindow
            </summary>
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:VukosConfigurationManager.ConfigurationPlugin">
            <summary>The object for implementing an Add-in.</summary>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.#ctor">
            <summary>Implements the constructor for the Add-in object. Place your initialization code within this method.</summary>
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.OnConnection(System.Object,Extensibility.ext_ConnectMode,System.Object,System.Array@)">
            <summary>Implements the OnConnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being loaded.</summary>
            <param term='application'>Root object of the host application.</param>
            <param term='connectMode'>Describes how the Add-in is being loaded.</param>
            <param term='addInInst'>Object representing this Add-in.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.OnDisconnection(Extensibility.ext_DisconnectMode,System.Array@)">
            <summary>Implements the OnDisconnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being unloaded.</summary>
            <param term='disconnectMode'>Describes how the Add-in is being unloaded.</param>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.OnAddInsUpdate(System.Array@)">
            <summary>Implements the OnAddInsUpdate method of the IDTExtensibility2 interface. Receives notification when the collection of Add-ins has changed.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />		
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.OnStartupComplete(System.Array@)">
            <summary>Implements the OnStartupComplete method of the IDTExtensibility2 interface. Receives notification that the host application has completed loading.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.OnBeginShutdown(System.Array@)">
            <summary>Implements the OnBeginShutdown method of the IDTExtensibility2 interface. Receives notification that the host application is being unloaded.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.QueryStatus(System.String,EnvDTE.vsCommandStatusTextWanted,EnvDTE.vsCommandStatus@,System.Object@)">
            <summary>Implements the QueryStatus method of the IDTCommandTarget interface. This is called when the command's availability is updated</summary>
            <param term='commandName'>The name of the command to determine state for.</param>
            <param term='neededText'>Text that is needed for the command.</param>
            <param term='status'>The state of the command in the user interface.</param>
            <param term='commandText'>Text requested by the neededText parameter.</param>
            <seealso class='Exec' />
        </member>
        <member name="M:VukosConfigurationManager.ConfigurationPlugin.Exec(System.String,EnvDTE.vsCommandExecOption,System.Object@,System.Object@,System.Boolean@)">
            <summary>Implements the Exec method of the IDTCommandTarget interface. This is called when the command is invoked.</summary>
            <param term='commandName'>The name of the command to execute.</param>
            <param term='executeOption'>Describes how the command should be run.</param>
            <param term='varIn'>Parameters passed from the caller to the command handler.</param>
            <param term='varOut'>Parameters passed from the command handler to the caller.</param>
            <param term='handled'>Informs the caller if the command was handled or not.</param>
            <seealso class='Exec' />
        </member>
        <member name="F:VukosConfigurationManager.SolutionView._solution">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.SolutionView.Solution"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.SolutionView._projects">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.SolutionView.Projects"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.SolutionView._configurations">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.SolutionView.Configurations"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.SolutionView._activeConfiguration">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.SolutionView.ActiveConfiguration"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.SolutionView._platforms">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.SolutionView.Platforms"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.SolutionView._activePlatform">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.SolutionView.ActivePlatform"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.ProjectView._project">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.ProjectView.Project"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.ProjectView._solution">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.ProjectView.Solution"/>
            </summary>
        </member>
        <member name="F:VukosConfigurationManager.ProjectView._context">
            <summary>
            A backing store for the property <see cref="P:VukosConfigurationManager.ProjectView.Context"/>
            </summary>
        </member>
        <member name="T:Vukos.Common.Suppression">
            <summary>
            Used to suppress an action from occurring in code.
            Generally used to stop an action from occurring twice.
            Not Thread Safe.
            </summary>
        </member>
        <member name="F:Vukos.Common.Suppression.DEFAULT_SuppressionCount">
            <summary>
            The default suppression count
            </summary>
        </member>
        <member name="F:Vukos.Common.Suppression._suppressionCount">
            <summary>
            Used to store the current number of suppressions on the object.
            </summary>
        </member>
        <member name="M:Vukos.Common.Suppression.Suppress">
            <summary>
            Increments the suppression count, this can be called multiple times.
            A call to <see cref="M:Vukos.Common.Suppression.Unsuppress"/> should be made for every call to this method.
            Not Thread Safe.
            </summary>
        </member>
        <member name="M:Vukos.Common.Suppression.Unsuppress">
            <summary>
            Decrements the suppression count, this can be called multiple times.
            A call to <see cref="M:Vukos.Common.Suppression.Suppress"/> should have been made first for every call to this method.
            Not Thread Safe.
            </summary>
        </member>
        <member name="M:Vukos.Common.Suppression.Run(System.Action)">
            <summary>
            Runs the specified action, only allowing it to be run once.
            </summary>
            <param name="singleUsageAction">The action which should only be run once at a time.</param>
        </member>
        <member name="P:Vukos.Common.Suppression.IsSuppressed">
            <summary>
            Gets a value indicating whether this instance is suppressed.
            Not Thread Safe.
            </summary>
            <value>
            	<c>true</c> if this instance is suppressed; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
